{{/*
Create helm partial for Vault container
*/}}
{{- define "containerVault" }}
- name: {{ template "vault.fullname" . }}
  image: "{{.Values.vault.image}}:{{.Values.vault.imageTag}}"
  securityContext:
    capabilities:
      add:
      - IPC_LOCK
  imagePullPolicy: {{ .Values.vault.imagePullPolicy }}
  ports:
  {{- if .Values.vault.enableTLS }}
  - name: https
    containerPort: 443
  {{- else }}
  - name: http
    containerPort: 80
  {{- end }}
  volumeMounts:
  - name: config
    mountPath: /etc/vault/cfg
    readOnly: true
  - name: startscript
    mountPath: /vault-bin/vault-start.sh
    subPath: vault-start.sh
    readOnly: false
  {{- if .Values.vault.tls.enabled }}
  - name: vault-tls
    mountPath: {{ .Values.vault.tls.secret.mountPath }}
    readOnly: true
  {{- end }}
  {{- if .Values.vault.etcdBackend.tls.enabled }}
  - name: etcd-tls
    mountPath: {{ .Values.vault.etcdBackend.tls.secret.mountPath }}
    readOnly: true
  {{- end }}
  env:
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: CLUSTER_LISTENER_PORT
      value: "{{ .Values.vault.clusterListenerPort }}"
  {{- if .Values.vault.enableTLS }}
    - name: SCHEME
      value: "https"
    - name: CLIENT_LISTENER_PORT
      value: "443"
    - name: VAULT_ADDR
      value: "https://127.0.0.1:{{ default 8200 .Values.vault.listenerPort }}"
    - name: VAULT_CACERT
      value: "{{ .Values.vault.tls.secret.mountPath }}/{{ .Values.vault.tls.secret.caFile }}"
    - name: VAULT_CLIENT_KEY
      value: "{{ .Values.vault.tls.secret.mountPath }}/{{ .Values.vault.tls.secret.keyFile }}"
    - name: VAULT_CLIENT_CERT
      value: "{{ .Values.vault.tls.secret.mountPath }}/{{ .Values.vault.tls.secret.certFile }}"
  {{- else }}
    - name: SCHEME
      value: "http"
    - name: CLIENT_LISTENER_PORT
      value: "80"
    - name: VAULT_ADDR
      value: "http://127.0.0.1:{{ default 8200 .Values.vault.listenerPort }}"
  {{- end }}
    - name: FQDN
      value: "{{ template "vault.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}"
    - name: VAULT_STARTUP_OPTIONS
      value: "{{- if .Values.vault.enableDebug }}-log-level=debug{{- end }}"
  command: ["/bin/sh","-c","chmod 755 /vault-bin/vault-start.sh && /vault-bin/vault-start.sh"]
  resources:
    limits:
      cpu: {{ .Values.vault.cpu }}
      memory: {{ .Values.vault.memory }}
    requests:
      cpu: {{ .Values.vault.cpu }}
      memory: {{ .Values.vault.memory }}
{{- end }}
